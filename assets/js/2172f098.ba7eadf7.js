"use strict";(self.webpackChunkopenpathfinder_com=self.webpackChunkopenpathfinder_com||[]).push([[7602],{5256:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"projects/visionBoard/report_management","title":"Report Management","description":"visionBoard has the capability of generating reports that can be used to analyze data.","source":"@site/docs/projects/visionBoard/report_management.md","sourceDirName":"projects/visionBoard","slug":"/visionBoard/report-management","permalink":"/docs/visionBoard/report-management","draft":false,"unlisted":false,"editUrl":"https://github.com/openPathfinder/openpathfinder.com/tree/main/packages/create-docusaurus/templates/shared/docs/projects/visionBoard/report_management.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Report Management","slug":"/visionBoard/report-management"},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/docs/visionBoard/architecture"},"next":{"title":"Database Management","permalink":"/docs/visionBoard/database-management"}}');var s=n(4848),o=n(8453);const a={sidebar_position:6,title:"Report Management",slug:"/visionBoard/report-management"},i=void 0,c={},d=[{value:"Generate the Reports",id:"generate-the-reports",level:2},{value:"Showcase the Reports",id:"showcase-the-reports",level:2},{value:"Static Server",id:"static-server",level:3}];function l(e){const t={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"visionBoard has the capability of generating reports that can be used to analyze data."}),"\n",(0,s.jsx)(t.h2,{id:"generate-the-reports",children:"Generate the Reports"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Not yet implemented"})}),"\n",(0,s.jsx)(t.h2,{id:"showcase-the-reports",children:"Showcase the Reports"}),"\n",(0,s.jsxs)(t.p,{children:["The simplest option is to run the workflow ",(0,s.jsx)(t.code,{children:"show-reports"}),", which will start an HTTP server that lists the content in the ",(0,s.jsx)(t.code,{children:"output"})," folder. Any asset previously generated can be accessed via a web browser using this approach."]}),"\n",(0,s.jsx)(t.h3,{id:"static-server",children:"Static Server"}),"\n",(0,s.jsx)(t.p,{children:"visionBoard includes the option to run a local HTTP server to serve the artifacts generated during its processes. This allows easy access to outputs without needing external hosting."}),"\n",(0,s.jsx)(t.p,{children:"You can customize the server by defining the following environment variables:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"IP"}),": The IP address the server should bind to (default: ",(0,s.jsx)(t.code,{children:"localhost"}),")."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"PORT"}),": The port the server should use (default: ",(0,s.jsx)(t.code,{children:"3000"}),")."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"For example, to run the server on a specific IP and port:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"export IP=192.168.1.100\nexport PORT=8080\nvisionBoard workflow run --name show-reports\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If these variables are not set, visionBoard will default to ",(0,s.jsx)(t.code,{children:"localhost:3000"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(6540);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);