"use strict";(self.webpackChunkopenpathfinder_com=self.webpackChunkopenpathfinder_com||[]).push([[9714],{2709:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"projects/visionBoard/installation","title":"Installation","description":"This guide outlines multiple methods to install visionBoard. After installation, you can verify that the binary is working correctly by running the version command. The console output should resemble:","source":"@site/docs/projects/visionBoard/installation.md","sourceDirName":"projects/visionBoard","slug":"/visionBoard/installation","permalink":"/docs/visionBoard/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/openPathfinder/openpathfinder.com/tree/main/packages/create-docusaurus/templates/shared/docs/projects/visionBoard/installation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Installation","slug":"/visionBoard/installation"},"sidebar":"tutorialSidebar","previous":{"title":"About","permalink":"/docs/visionBoard"},"next":{"title":"Configuration","permalink":"/docs/visionBoard/configuration"}}');var o=i(4848),r=i(8453);const a={sidebar_position:2,title:"Installation",slug:"/visionBoard/installation"},l="Installation Guide for visionBoard",t={},d=[{value:"Install via npm",id:"install-via-npm",level:2},{value:"Using Docker",id:"using-docker",level:2},{value:"From Source Code",id:"from-source-code",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"installation-guide-for-visionboard",children:"Installation Guide for visionBoard"})}),"\n",(0,o.jsxs)(e.p,{children:["This guide outlines multiple methods to install visionBoard. After installation, you can verify that the binary is working correctly by running the ",(0,o.jsx)(e.code,{children:"version"})," command. The console output should resemble:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"[08:36:40.532] INFO: visionBoard@0.1.0-beta2 (MIT)\n"})}),"\n",(0,o.jsx)(e.h2,{id:"install-via-npm",children:"Install via npm"}),"\n",(0,o.jsx)(e.p,{children:"You can install visionBoard globally using npm:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npm i -g visionBoard\nvisionBoard version\n"})}),"\n",(0,o.jsxs)(e.p,{children:["Alternatively, use it directly with ",(0,o.jsx)(e.code,{children:"npx"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npx visionBoard version\n"})}),"\n",(0,o.jsx)(e.h2,{id:"using-docker",children:"Using Docker"}),"\n",(0,o.jsx)(e.p,{children:"To use visionBoard via Docker:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Pull the Docker image:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"docker pull ghcr.io/openpathfinder/visionboard:latest\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Run the container and check the version:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"docker run --rm ghcr.io/openpathfinder/visionboard:latest version\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"(Optional) Create an alias for convenience:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'alias visionBoard="docker run --rm ghcr.io/openpathfinder/visionboard:latest"\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"from-source-code",children:"From Source Code"}),"\n",(0,o.jsx)(e.p,{children:"To install visionBoard from source:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Clone the repository:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/OpenPathfinder/visionBoard.git\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Navigate to the project directory:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"cd visionBoard\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Install dependencies:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npm install\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Verify the installation:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"node visionboard.js version\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"(Optional) Create an alias for convenience:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'alias visionBoard="node visionBoard.js"\n'})}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>l});var s=i(6540);const o={},r=s.createContext(o);function a(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);