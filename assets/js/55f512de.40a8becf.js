"use strict";(self.webpackChunkopenpathfinder_com=self.webpackChunkopenpathfinder_com||[]).push([[5826],{1184:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"checks/27","title":"Ensure Security.md Meets OpenJS CVD Guidelines","description":"Use Case","source":"@site/docs/checks/securityMdMeetsOpenJSCVD.mdx","sourceDirName":"checks","slug":"/checks/securityMdMeetsOpenJSCVD","permalink":"/docs/checks/securityMdMeetsOpenJSCVD","draft":false,"unlisted":false,"editUrl":"https://github.com/openPathfinder/openpathfinder.com/tree/main/packages/create-docusaurus/templates/shared/docs/checks/securityMdMeetsOpenJSCVD.mdx","tags":[],"version":"current","sidebarPosition":25,"frontMatter":{"sidebar_position":25,"id":"27","title":"Ensure Security.md Meets OpenJS CVD Guidelines","slug":"/checks/securityMdMeetsOpenJSCVD"},"sidebar":"tutorialSidebar","previous":{"title":"Require Commit Status Checks to Pass Before Merging","permalink":"/docs/checks/commitStatusChecks"},"next":{"title":"Use CVD Tools to Manage Vulnerability Reports","permalink":"/docs/checks/useCVDToolForVulns"}}');var i=t(4848),c=t(8453);const r={sidebar_position:25,id:27,title:"Ensure Security.md Meets OpenJS CVD Guidelines",slug:"/checks/securityMdMeetsOpenJSCVD"},o=void 0,d={},l=[{value:"Use Case",id:"use-case",level:2},{value:"Description",id:"description",level:2},{value:"Details",id:"details",level:2}];function a(e){const s={a:"a",h2:"h2",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"use-case",children:"Use Case"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Incubating: expected"}),"\n",(0,i.jsx)(s.li,{children:"Active: expected"}),"\n",(0,i.jsx)(s.li,{children:"Retiring: expected"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(s.p,{children:"Security.md Meets OpenJS CVD Guidelines"}),"\n",(0,i.jsx)(s.h2,{id:"details",children:"Details"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Implementation Status: pending"}),"\n",(0,i.jsx)(s.li,{children:"C-SCRM: false"}),"\n",(0,i.jsx)(s.li,{children:"Priority Group: P7"}),"\n",(0,i.jsxs)(s.li,{children:["Sources: ",(0,i.jsx)(s.a,{href:"https://github.com/ossf/scorecard/blob/main/docs/checks.md#security-policy",children:"OpenSSF Scorecard"})]}),"\n",(0,i.jsx)(s.li,{children:"Created at 2024-12-22T04:04:30.161Z"}),"\n",(0,i.jsx)(s.li,{children:"Updated at 2024-12-22T04:04:30.161Z"}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(6540);const i={},c=n.createContext(i);function r(e){const s=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);