"use strict";(self.webpackChunkopenpathfinder_com=self.webpackChunkopenpathfinder_com||[]).push([[320],{4398:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>t});const n=JSON.parse('{"id":"projects/visionBoard/usage","title":"Usage","description":"CLI Commands","source":"@site/docs/projects/visionBoard/usage.md","sourceDirName":"projects/visionBoard","slug":"/visionBoard/usage","permalink":"/docs/visionBoard/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/openPathfinder/openpathfinder.com/tree/main/packages/create-docusaurus/templates/shared/docs/projects/visionBoard/usage.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Usage","slug":"/visionBoard/usage"},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/visionBoard/configuration"},"next":{"title":"Architecture","permalink":"/docs/visionBoard/architecture"}}');var c=i(4848),a=i(8453);const l={sidebar_position:4,title:"Usage",slug:"/visionBoard/usage"},o=void 0,r={},t=[{value:"CLI Commands",id:"cli-commands",level:2},{value:"Version",id:"version",level:3},{value:"Projects",id:"projects",level:3},{value:"Add a New Project",id:"add-a-new-project",level:4},{value:"Workflows",id:"workflows",level:3},{value:"Run a Workflow",id:"run-a-workflow",level:4},{value:"List Available Workflows",id:"list-available-workflows",level:4},{value:"Checks",id:"checks",level:3},{value:"List All Available Checks",id:"list-all-available-checks",level:4},{value:"Run a Specific Check",id:"run-a-specific-check",level:4},{value:"Run All Checks Sequentially",id:"run-all-checks-sequentially",level:4},{value:"Checklists",id:"checklists",level:3},{value:"List Available Checklists",id:"list-available-checklists",level:4},{value:"Run a Specific Checklist",id:"run-a-specific-checklist",level:4},{value:"Run a Checklist with a Defined Project Scope",id:"run-a-checklist-with-a-defined-project-scope",level:4}];function d(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.h2,{id:"cli-commands",children:"CLI Commands"}),"\n",(0,c.jsxs)(s.p,{children:["Every command in ",(0,c.jsx)(s.code,{children:"visionBoard"})," comes with its own detailed help documentation. Use the ",(0,c.jsx)(s.code,{children:"help"})," command to get more information about specific commands and their options. For example:"]}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"General help:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard help\n"})}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Command-specific help:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard workflow help\n"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.h3,{id:"version",children:"Version"}),"\n",(0,c.jsx)(s.p,{children:"Display the current version of visionBoard. Use this command to verify your installation and ensure compatibility:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard version\n"})}),"\n",(0,c.jsx)(s.h3,{id:"projects",children:"Projects"}),"\n",(0,c.jsxs)(s.p,{children:["The ",(0,c.jsx)(s.code,{children:"visionBoard project"})," command allows you to add and manage projects linked to ",(0,c.jsx)(s.code,{children:"visionBoard"}),". In the ",(0,c.jsx)(s.a,{href:"/docs/visionBoard/architecture",children:"architecture documentation"})," you can get a better idea of how the entities are related (project, organization, repository, etc...)"]}),"\n",(0,c.jsx)(s.h4,{id:"add-a-new-project",children:"Add a New Project"}),"\n",(0,c.jsx)(s.p,{children:"Use this command to add a project with one or multiple GitHub organizations associated to the visionBoard:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard project add [--name <name>] [--github-urls <urls...>]\n"})}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:(0,c.jsx)(s.code,{children:"--name <name>"})}),": The name you want to assign to this project."]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:(0,c.jsx)(s.code,{children:"--github-urls <urls...>"})}),": One or more GitHub organization URL(s) associated with the project."]}),"\n"]}),"\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard project add --name express --github-urls https://github.com/expressjs https://github.com/pillarjs https://github.com/jshttp\n"})}),"\n",(0,c.jsxs)(s.p,{children:["This command adds a project named ",(0,c.jsx)(s.code,{children:"express"})," and associates it with three GitHub organizations."]}),"\n",(0,c.jsxs)(s.p,{children:["For more details about project configuration, see the ",(0,c.jsx)(s.a,{href:"/docs/visionBoard/architecture",children:"architecture documentation"}),"."]}),"\n",(0,c.jsx)(s.h3,{id:"workflows",children:"Workflows"}),"\n",(0,c.jsxs)(s.p,{children:["Workflows in ",(0,c.jsx)(s.code,{children:"visionBoard"})," automate sequences of tasks or checks. Use the following commands to manage workflows:"]}),"\n",(0,c.jsx)(s.h4,{id:"run-a-workflow",children:"Run a Workflow"}),"\n",(0,c.jsx)(s.p,{children:"Execute a specific workflow by name:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard workflow run [--name <name>]\n"})}),"\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard workflow run --name run-all-checks\n"})}),"\n",(0,c.jsx)(s.h4,{id:"list-available-workflows",children:"List Available Workflows"}),"\n",(0,c.jsx)(s.p,{children:"Display all available workflows:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard workflow list\n"})}),"\n",(0,c.jsx)(s.h3,{id:"checks",children:"Checks"}),"\n",(0,c.jsxs)(s.p,{children:["Checks are individual tasks or validations performed by ",(0,c.jsx)(s.code,{children:"visionBoard"}),". Use the following commands to manage checks:"]}),"\n",(0,c.jsx)(s.h4,{id:"list-all-available-checks",children:"List All Available Checks"}),"\n",(0,c.jsx)(s.p,{children:"Display a list of all available checks:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard check list\n"})}),"\n",(0,c.jsxs)(s.p,{children:["For more details about checks available, see the ",(0,c.jsx)(s.a,{href:"/docs/visionBoard/Checks",children:"Checks documentation"}),"."]}),"\n",(0,c.jsx)(s.h4,{id:"run-a-specific-check",children:"Run a Specific Check"}),"\n",(0,c.jsx)(s.p,{children:"Execute a specific check by name:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard check run [--name <name>]\n"})}),"\n",(0,c.jsx)(s.h4,{id:"run-all-checks-sequentially",children:"Run All Checks Sequentially"}),"\n",(0,c.jsx)(s.p,{children:"Run all checks in sequence using a predefined workflow:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard workflow run run-all-checks\n"})}),"\n",(0,c.jsxs)(s.p,{children:["For more details about checks, see ",(0,c.jsx)(s.a,{href:"/docs/visionBoard/Checks",children:"Checks Guide"}),"."]}),"\n",(0,c.jsx)(s.h3,{id:"checklists",children:"Checklists"}),"\n",(0,c.jsx)(s.p,{children:"Checklists are collections of checks grouped for convenience. Use these commands to manage and execute checklists:"}),"\n",(0,c.jsx)(s.h4,{id:"list-available-checklists",children:"List Available Checklists"}),"\n",(0,c.jsx)(s.p,{children:"Display all available checklists:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard checklist list\n"})}),"\n",(0,c.jsx)(s.h4,{id:"run-a-specific-checklist",children:"Run a Specific Checklist"}),"\n",(0,c.jsx)(s.p,{children:"Execute a specific checklist by name:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard checklist run [--name <name>]\n"})}),"\n",(0,c.jsx)(s.h4,{id:"run-a-checklist-with-a-defined-project-scope",children:"Run a Checklist with a Defined Project Scope"}),"\n",(0,c.jsx)(s.p,{children:"Run a checklist while limiting its scope to specific projects:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard checklist run [--name <name>] [--project-scope <name1,name2,...>]\n"})}),"\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"visionBoard checklist run --name OpenJS-SCGv1.0-active --project-scope express\n"})}),"\n",(0,c.jsxs)(s.p,{children:["For more details about checklists, see ",(0,c.jsx)(s.a,{href:"/docs/visionBoard/checklists",children:"Checklists Guide"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>o});var n=i(6540);const c={},a=n.createContext(c);function l(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);