"use strict";(self.webpackChunkopenpathfinder_com=self.webpackChunkopenpathfinder_com||[]).push([[6117],{7841:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"checks/53","title":"Refresh Dependencies with Annual Releases","description":"This check is currently under development and not yet implemented. Click here to learn how you can help.","source":"@site/docs/checks/annualDependencyRefresh.mdx","sourceDirName":"checks","slug":"/checks/annualDependencyRefresh","permalink":"/docs/checks/annualDependencyRefresh","draft":false,"unlisted":false,"editUrl":"https://github.com/openPathfinder/openpathfinder.com/tree/main/packages/create-docusaurus/templates/shared/docs/checks/annualDependencyRefresh.mdx","tags":[],"version":"current","sidebarPosition":51,"frontMatter":{"sidebar_position":51,"id":"53","title":"Refresh Dependencies with Annual Releases","slug":"/checks/annualDependencyRefresh"},"sidebar":"tutorialSidebar","previous":{"title":"Uniquely Identify Modified Dependencies","permalink":"/docs/checks/identifyModifiedDependencies"},"next":{"title":"Use AAL2/3 Passkeys for GitHub Access","permalink":"/docs/checks/useHwKeyGithubAccess"}}');var i=t(4848),r=t(8453);const c={sidebar_position:51,id:53,title:"Refresh Dependencies with Annual Releases",slug:"/checks/annualDependencyRefresh"},a=void 0,l={},o=[{value:"Description",id:"description",level:2},{value:"Details",id:"details",level:2}];function d(e){const n={a:"a",admonition:"admonition",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["This check is currently under development and not yet implemented. ",(0,i.jsx)(n.a,{href:"/contribute",children:"Click here to learn how you can help"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"Ensure dependencies are refreshed through a new release at least once annually"}),"\n",(0,i.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Default Category: vulnerability management"}),"\n",(0,i.jsx)(n.li,{children:"Default Priority Group: P14"}),"\n",(0,i.jsx)(n.li,{children:"C-SCRM: true"}),"\n",(0,i.jsxs)(n.li,{children:["Sources: ",(0,i.jsx)(n.a,{href:"https://www.bestpractices.dev/en/criteria?details=true&rationale=true#0.maintained",children:"OpenSSF Best Practices Badge Passing Level [maintained]"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);